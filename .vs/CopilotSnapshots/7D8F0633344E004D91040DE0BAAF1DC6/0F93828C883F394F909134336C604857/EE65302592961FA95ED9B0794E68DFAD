using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Windows;
using DataConcentrator;

namespace ScadaGUI
{
    /// <summary>
    /// Interaction logic for MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
        private DataConcentrator.ContextClass context;

        public MainWindow()
        {
            InitializeComponent();
            context = new DataConcentrator.ContextClass();
            LoadData();
        }

        private void LoadData()
        {
            // Učitaj tagove i alarme (stub, popuniti prema bazi ili test podacima)
            TagsDataGrid.ItemsSource = context.Tags.Values.ToList();
            AlarmsDataGrid.ItemsSource = context.ActivatedAlarms.ToList();
        }

        private void ReportButton_Click(object sender, RoutedEventArgs e)
        {
            // Generiši .txt izveštaj za analogne ulaze u opsegu (high+low)/2 ± 5
            var analogInputs = context.Tags.Values.OfType<DataConcentrator.AnalogTag>().Where(t => t.Type == DataConcentrator.TagType.AI).ToList();
            var lines = new List<string>();
            foreach (var tag in analogInputs)
            {
                double sredina = (tag.HighLimit + tag.LowLimit) / 2.0;
                double min = sredina - 5;
                double max = sredina + 5;
                // Pretpostavljamo da postoji lista vrednosti (stub)
                // Ovdje bi trebalo čitati iz baze ili memorije sve vrednosti tog taga
                // Primer: lines.Add($"{tag.Id}: vrednosti u opsegu {min} - {max}");
                lines.Add($"{tag.Id} ({tag.Description}): vrednosti u opsegu {min} - {max}");
            }
            string path = $"SCADA_REPORT_{DateTime.Now:yyyyMMdd_HHmmss}.txt";
            File.WriteAllLines(path, lines);
            MessageBox.Show($"Izveštaj je sačuvan u fajl: {path}", "REPORT");
        }
    }
}
